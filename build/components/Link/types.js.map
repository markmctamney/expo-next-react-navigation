{"version":3,"file":"types.js","sourceRoot":"","sources":["../../../src/components/Link/types.ts"],"names":[],"mappings":"","sourcesContent":["// import { NavigateTo } from '../../hooks/use-routing/types'\n// import { ComponentPropsWithoutRef, CSSProperties } from 'react'\nimport Link from 'next/link'\n// import { TouchableOpacity, TextStyle, ViewStyle } from 'react-native'\n\n// export type LinkProps<To extends NavigateTo = NavigateTo> = To & {\n//   /**\n//    * Required: child component/text\n//    */\n//   children: React.ReactNode\n//   /**\n//    * Optional: props passed to next/router Link Component.\n//    */\n//   nextLinkProps?: ComponentPropsWithoutRef<typeof Link>\n//   /**\n//    * Optional: props passed to TouchableOpacity component on native.\n//    */\n//   touchableOpacityProps?: ComponentPropsWithoutRef<typeof TouchableOpacity>\n//   style?: TextStyle | ViewStyle\n// }\n\nexport type NextProps = {\n  nextLinkProps?: React.ComponentPropsWithoutRef<typeof Link>\n}\nexport type Web = {\n  /**\n   * Alternative path to override routeName on web.\n   */\n  path?: string\n  /**\n   * A custom URL ending to show in the browser address bar instead of the `web.path` or `routeName`.\n   *\n   * Should start with `/`.\n   */\n  as?: string\n  /**\n   * Prefetch the page in the background. Defaults to `true`\n   */\n  prefetch?: boolean\n  /**\n   * Scroll to the top of the page after a navigation. Defaults to `true`\n   *\n   */\n  scroll?: boolean\n  /**\n   * Replace the current history state instead of adding a new url into the stack. Defaults to `false`\n   */\n  replace?: boolean\n}\n"]}
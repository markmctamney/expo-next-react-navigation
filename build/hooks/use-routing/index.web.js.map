{"version":3,"file":"index.web.js","sourceRoot":"","sources":["../../../src/hooks/use-routing/index.web.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,WAAW,EAAE,MAAM,OAAO,CAAA;AACnC,OAAO,CAAC,MAAM,QAAQ,CAAA;AACtB,OAAO,MAAM,EAAE,EAAE,SAAS,EAAE,MAAM,aAAa,CAAA;AAE/C,OAAO,KAAK,MAAM,mBAAmB,CAAA;AAMrC,MAAM,MAAM,GAAG,GAAG,EAAE,CAAC,MAAM,CAAC,IAAI,EAAE,CAAA;AAClC,MAAM,QAAQ,GAAG,GAAG,EAAE,GAAE,CAAC,CAAA;AACzB,MAAM,SAAS,GAAG,CAAS,CAAI,EAAE,EAAE,GAAE,CAAC,CAAA;AAEtC,MAAM,CAAC,OAAO,UAAU,UAAU;IAIhC,MAAM,MAAM,GAAG,SAAS,EAAE,CAAA;IAE1B,MAAM,QAAQ,GAAG,CACf,KAAoC,EACpC,QAAkB,EACC,EAAE;QACrB,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,SAAS,CAAA;SACjB;QAED,MAAM,GAAG,GAAU,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,QAAQ,CAAA;QACzD,2BAA2B;QAC3B,uEAAuE;QACvE,IAAI;QACJ,OAAO,GAAG,CAAA;IACZ,CAAC,CAAA;IAED,MAAM,QAAQ,GAAG,WAAW,CAC1B,CAAqC,EACnC,SAAS,EACT,GAAG,EACH,MAAM,GAAG,KAAK,CAAC,MAAM,GAClB,EAAE,EAAE;QACP,MAAM,OAAO,GAAG,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAA;QACxE,MAAM,QAAQ,GAAG,IAAI,OAAO,IAAI,SAAS,EAAE,CAAA;QAE3C,MAAM,CAAC,IAAI,CACT;YACE,QAAQ;YACR,KAAK,EAAE,EAAE,GAAG,MAAM,EAAE;SACrB,EACD,GAAG,EAAE,EAAE,CACR,CAAA;IACH,CAAC,EACD,EAAE,CACH,CAAA;IACD,MAAM,OAAO,GAAG,WAAW,CACzB,CAAqC,EACnC,SAAS,EACT,GAAG,EACH,MAAM,GAAG,KAAK,CAAC,MAAM,GAClB,EAAE,EAAE;QACP,MAAM,OAAO,GAAG,GAAG,EAAE,IAAI,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,EAAE,IAAI,CAAA;QACxE,MAAM,QAAQ,GAAG,IAAI,OAAO,IAAI,SAAS,EAAE,CAAA;QAE3C,MAAM,CAAC,OAAO,CACZ;YACE,QAAQ;YACR,KAAK,EAAE,EAAE,GAAG,MAAM,EAAE;SACrB,EACD,GAAG,EAAE,EAAE,CACR,CAAA;IACH,CAAC,EACD,EAAE,CACH,CAAA;IAED,OAAO;QACL,QAAQ;QACR,QAAQ;QACR,IAAI,EAAE,QAAQ;QACd,MAAM;QACN,QAAQ;QACR,QAAQ,EAAE,MAAM,CAAC,QAAQ;QACzB,OAAO;QACP,SAAS;KACV,CAAA;AACH,CAAC","sourcesContent":["import { useCallback } from 'react'\nimport _ from 'lodash'\nimport Router, { useRouter } from 'next/router'\nimport { NavigateTo } from './types'\nimport empty from '../../utils/empty'\nimport {\n  DefaultRouteProp,\n  DefaultNavigationProp,\n} from 'expo-navigation-core/build/hooks/use-routing/types'\n\nconst goBack = () => Router.back()\nconst popToTop = () => {}\nconst setParams = <R = {}>(a: R) => {}\n\nexport default function useRouting<\n  RProp extends DefaultRouteProp = DefaultRouteProp,\n  NProp extends DefaultNavigationProp = DefaultNavigationProp\n>() {\n  const router = useRouter()\n\n  const getParam = <Param>(\n    param: Parameters<typeof _.get>['1'],\n    fallback?: unknown\n  ): Param | undefined => {\n    if (!router) {\n      return undefined\n    }\n\n    const val: Param = _.get(router.query, param) ?? fallback\n    // if (val === undefined) {\n    //   console.warn('Tried to get param', param, 'but it does not exist')\n    // }\n    return val\n  }\n\n  const navigate = useCallback(\n    <To extends NavigateTo = NavigateTo>({\n      routeName,\n      web,\n      params = empty.object,\n    }: To) => {\n      const webPath = web?.path?.[0] === '/' ? web?.path?.slice(1) : web?.path\n      const pathname = `/${webPath ?? routeName}`\n\n      Router.push(\n        {\n          pathname,\n          query: { ...params },\n        },\n        web?.as\n      )\n    },\n    []\n  )\n  const replace = useCallback(\n    <To extends NavigateTo = NavigateTo>({\n      routeName,\n      web,\n      params = empty.object,\n    }: To) => {\n      const webPath = web?.path?.[0] === '/' ? web?.path?.slice(1) : web?.path\n      const pathname = `/${webPath ?? routeName}`\n\n      Router.replace(\n        {\n          pathname,\n          query: { ...params },\n        },\n        web?.as\n      )\n    },\n    []\n  )\n\n  return {\n    getParam,\n    navigate,\n    push: navigate,\n    goBack,\n    popToTop,\n    prefetch: router.prefetch,\n    replace,\n    setParams,\n  }\n}\n"]}